left_join(country_data, by = c("color_code" = "coo_iso")) |>
mutate(legend = case_when(
total_refugees < 1e4 ~ "<10k",
total_refugees < 1e5 ~ "10k-100k",
total_refugees < 1e6 ~ "100k-1M",
is.na(total_refugees) ~ NA_character_,
TRUE ~ ">1M"
)) |>
mutate(legend = as_factor(legend) |>
fct_relevel("<10k", "10k-100k", "100k-1M", ">1M"))
poly_idps <- read_sf(poly_url) |>
st_set_crs(4326) |>
left_join(country_data, by = c("color_code" = "coo_iso")) |>
mutate(legend = case_when(
total_idps < 1e4 ~ "<10k",
total_idps < 1e5 ~ "10k-100k",
total_idps < 1e6 ~ "100k-1M",
is.na(total_idps) ~ NA_character_,
TRUE ~ ">1M"
)) |>
mutate(legend = as_factor(legend) |>
fct_relevel("<10k", "10k-100k", "100k-1M", ">1M"))
# Sort line type
line <- read_sf(line_url) |>
mutate(
type = as_factor(type) |>
fct_relevel("solid", "dashed", "dotted", "dashed-dot")
) |>
st_set_crs(4326)
# # Data URL
# df_url <- read_csv("https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/bubble_map.csv")
#
# country_data <- refugees::population %>%
#                 filter(year >= 2012 & year <= 2022) %>%
#                 group_by(coo_name, coo_iso) %>%
#                 summarise(total_refugees = sum(refugees),
#                           total_asylum = sum(asylum_seekers),
#                           total_idps = sum(idps)) %>%
#                 ungroup()
# # country_data
# loc_data <- country_data %>%
#             left_join(df_url, c("coo_iso" = "iso3")) %>%
#             select(-gis_name, -ref)
#
# top10_refugees <- loc_data %>%
#                   arrange(desc(total_refugees)) %>%
#                   drop_na(lon)
# # print(head(top10_refugees, 10))
#
# top10_asylum <- loc_data %>%
#                 arrange(desc(total_asylum)) %>%
#                 drop_na(lon)
# # print(head(top10_asylum, 10))
#
# top10_idps <- loc_data %>%
#               arrange(desc(total_idps)) %>%
#               drop_na(lon)
# # print(head(top10_idps, 10))
#
#
# poly_url <- "https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/world_polygons_simplified.json"
# line_url <- "https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/world_lines_simplified.json"
#
# # Read and transform data for refugees
# df_ref <- top10_refugees %>%
#   st_as_sf(coords = c("lon", "lat"),
#            crs = 4326)
#
# poly <- read_sf(poly_url) %>%
#   st_set_crs(4326)
#
# line <- read_sf(line_url) %>%
#   mutate(
#     type = as_factor(type) %>%
#       fct_relevel("solid", "dashed", "dotted", "dashed-dot")
#   ) %>%
#   st_set_crs(4326)
#
# # Read and transform data for asylum seekers
# df_asy <- top10_asylum %>%
#   st_as_sf(coords = c("lon", "lat"),
#            crs = 4326)
#
# # Read and transform data for internally displaced persons
# df_idp <- top10_idps %>%
#   st_as_sf(coords = c("lon", "lat"),
#            crs = 4326)
# Plot
ggplot() +
geom_sf(data = poly_refugees,
aes(fill = legend),
color = "transparent") +
geom_sf(data = line,
aes(linetype = type),
color = "white",
linewidth = .25,
show.legend = FALSE) +
coord_sf(crs = st_crs('ESRI:54030'),
expand = FALSE) +
scale_linetype_manual(values = c(1, 2, 3, 4)) +
scale_fill_unhcr_d(palette = "pal_blue") +
# labs(
#   title = "Global refugee displacement by country of asylum | 2021",
#   caption = "The boundaries and names shown and the designations used on this map do not imply official\nendorsement or acceptance by the United Nations.\nSource: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
# ) +
theme_unhcr(void = TRUE)
# ggplot() +
#   geom_sf(data = poly,
#           fill = unhcr_pal(n = 5, "pal_grey")[2],
#           color = "transparent") +
#   geom_sf(data = line,
#           aes(linetype = type),
#           color = "white",
#           linewidth = .25,
#           show.legend = FALSE) +
#   geom_sf(data = df_ref,
#           aes(size = total_refugees),
#           shape = 21,
#           fill = unhcr_pal(n = 1, "pal_blue"),
#           color = unhcr_pal(n = 5, "pal_blue")[5],
#           alpha = 0.3) +
#   scale_linetype_manual(values = c(1, 2, 3, 4)) +
#   scale_size_area(max_size = 12,
#                   labels = scales::label_number(
#                     scale_cut = cut_short_scale()
#                   ),
#                   breaks = c(1e5, 1e6, 5e6)) +
#   # labs(
#   #   title = "Global refugee displacement by country of origin | Last Decade",
#   #   caption = "The boundaries and names shown and the designations used on this map do not imply official endorsement or\nacceptance by the United Nations.\nSource: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
#   # ) +
#   coord_sf(crs = st_crs('ESRI:54030')) +
#   theme_unhcr(void = TRUE)
# Plot
ggplot() +
geom_sf(data = poly_idps,
aes(fill = legend),
color = "transparent") +
geom_sf(data = line,
aes(linetype = type),
color = "white",
linewidth = .25,
show.legend = FALSE) +
coord_sf(crs = st_crs('ESRI:54030'),
expand = FALSE) +
scale_linetype_manual(values = c(1, 2, 3, 4)) +
scale_fill_unhcr_d(palette = "pal_blue") +
# labs(
#   title = "Global refugee displacement by country of asylum | 2021",
#   caption = "The boundaries and names shown and the designations used on this map do not imply official\nendorsement or acceptance by the United Nations.\nSource: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
# ) +
theme_unhcr(void = TRUE)
#
# ggplot() +
#   geom_sf(data = poly,
#           fill = unhcr_pal(n = 5, "pal_grey")[2],
#           color = "transparent") +
#   geom_sf(data = line,
#           aes(linetype = type),
#           color = "white",
#           linewidth = .25,
#           show.legend = FALSE) +
#   geom_sf(data = df_idp,
#           aes(size = total_idps),
#           shape = 21,
#           fill = unhcr_pal(n = 1, "pal_blue"),
#           color = unhcr_pal(n = 5, "pal_blue")[5],
#           alpha = 0.3) +
#   scale_linetype_manual(values = c(1, 2, 3, 4)) +
#   scale_size_area(max_size = 12,
#                   labels = scales::label_number(
#                     scale_cut = cut_short_scale()
#                   ),
#                   breaks = c(1e5, 1e6, 5e6)) +
#   # labs(
#   #   title = "Global refugee displacement by country of origin | Last Decade",
#   #   caption = "The boundaries and names shown and the designations used on this map do not imply official endorsement or\nacceptance by the United Nations.\nSource: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
#   # ) +
#   coord_sf(crs = st_crs('ESRI:54030')) +
#   theme_unhcr(void = TRUE)
df <- read_csv("https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/correlation/heatmap.csv")
# Plot
ggplot(
df,
aes(
x = year,
y = fct_rev(location)
)
) +
geom_tile(aes(
fill = values
),
color = "white",
lwd = .5,
linetype = 1
) +
geom_text(
aes(
label = scales::number(values, accuracy = 0.1)
),
color = if_else(df$values > 2, "white", unhcr_pal(n = 5, "pal_grey")[5]),
size = 8 / .pt
) +
labs(
title = "Refugee population by region | 2011 - 2020",
subtitle = "Number of people in millions",
caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
) +
scale_x_continuous(
expand = expansion(c(0, 0)),
breaks = pretty_breaks(n = 10)
) +
scale_y_discrete(
labels = scales::label_wrap(17)
) +
scale_fill_stepsn(
colors = unhcr_pal(n = 5, "pal_blue"),
n.break = 5
) +
coord_fixed() +
theme_unhcr(
grid = FALSE,
axis = FALSE,
axis_title = FALSE,
legend = FALSE
)
## Where Do Displaced People Seek Asylum?
# # Data URL
# df_url <- read_csv("https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/bubble_map.csv")
#
# # print(refugees::flows %>% filter(year >= 2012 & year <=2022))
# app_country_data <- refugees::flows %>%
#                 filter(year >= 2012 & year <= 2022) %>%
#                 group_by(coa_name, coa_iso) %>%
#                 summarise(app_total_asylum = sum(asylum_seekers)) %>%
#                 ungroup()
#
# # print(app_country_data)
#
# # country_data
# app_loc_data <- app_country_data %>%
#             left_join(df_url, c("coa_iso" = "iso3")) %>%
#             select(-gis_name, -ref)
#
#
# app_top10_asylum <- app_loc_data %>%
#                 arrange(desc(app_total_asylum)) %>%
#                 drop_na(lon)
#
#
# poly_url <- "https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/world_polygons_simplified.json"
# line_url <- "https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/world_lines_simplified.json"
#
#
#
# app_poly <- read_sf(poly_url) %>%
#   st_set_crs(4326)
#
# app_line <- read_sf(line_url) %>%
#   mutate(
#     type = as_factor(type) %>%
#       fct_relevel("solid", "dashed", "dotted", "dashed-dot")
#   ) %>%
#   st_set_crs(4326)
#
# # Read and transform data for asylum seekers
# app_df_asy <- app_top10_asylum %>%
#   st_as_sf(coords = c("lon", "lat"),
#            crs = 4326)
#
# ggplot() +
#   geom_sf(data = app_poly,
#           fill = unhcr_pal(n = 5, "pal_grey")[2],
#           color = "transparent") +
#   geom_sf(data = app_line,
#           aes(linetype = type),
#           color = "white",
#           linewidth = .25,
#           show.legend = FALSE) +
#   geom_sf(data = app_df_asy,
#           aes(size = app_total_asylum),
#           shape = 21,
#           fill = unhcr_pal(n = 1, "pal_blue"),
#           color = unhcr_pal(n = 5, "pal_blue")[5],
#           alpha = 0.3) +
#   scale_linetype_manual(values = c(1, 2, 3, 4)) +
#   scale_size_area(max_size = 12,
#                   labels = scales::label_number(
#                     scale_cut = cut_short_scale()
#                   ),
#                   breaks = c(1e5, 1e6, 5e6)) +
#   # labs(
#   #   title = "Global refugee displacement by country of origin | Last Decade",
#   #   caption = "The boundaries and names shown and the designations used on this map do not imply official endorsement or\nacceptance by the United Nations.\nSource: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
#   # ) +
#   coord_sf(crs = st_crs('ESRI:54030')) +
#   theme_unhcr(void = TRUE)
asy_dec <- asylum_decisions %>%
filter(dec_recognized + dec_other + dec_rejected + dec_closed == dec_total) %>%
mutate(acceptance_rate_pct = (dec_recognized + dec_other)/dec_total * 100) %>%
arrange(desc(acceptance_rate_pct))
world <- map_data("world") %>%
filter(region != "Antarctica")
lat_long <- read_csv(here::here("data", "world_country_and_usa_states_latitude_and_longitude_values.csv"))
asy_dec_loc <- asy_dec %>%
left_join(lat_long, join_by("coa_name" == "country"))
sliding_map <- world %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group),
fill = unhcr_pal(n = 5, "pal_grey")[2],
color = "transparent",
size = 0.01) +
geom_point(data= asy_dec_loc,
aes(text = coa_name,
x = longitude,
y = latitude,
frame = year,
size = acceptance_rate_pct/2),
color = unhcr_pal(n = 5, "pal_blue")[5],
alpha = 0.2) +
labs( title = "Asylum Application Acceptance Rate \n from 2000 to 2023",
caption = "UNHCR") +
theme_map() +
scale_size_continuous(guide = F) +
scale_color_discrete(name = "Type") +
theme(plot.title = element_text(size = 14, hjust = 0.5, family = "Lato"))
app_map <- ggplotly(sliding_map) %>% animation_slider(currentvalue = list(prefix = "Year ", font = list(color="#8395B9")))
app_map
filter_years <- asylum_decisions %>%
filter(year %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022")) %>% mutate(procedure_type_2 = case_when(
procedure_type %in% c("G") ~ "Government",
procedure_type %in% c("U") ~ "UNHCR",
TRUE ~ "Joint"
))
filter_years$year <- as.factor(filter_years$year)
ggplot(filter_years, aes(x = year, fill = procedure_type_2)) +
geom_bar() +
labs(title = "Asylum Application Procedure Types | 2013-2022",
x = "Year",
y= NULL,
fill = "Procedure Type") +
theme_unhcr()+
theme(legend.position = "bottom")
filter_years <- asylum_decisions %>%
filter(year %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022")) %>% mutate(procedure_type_2 = case_when(
procedure_type %in% c("G") ~ "Government",
procedure_type %in% c("U") ~ "UNHCR",
TRUE ~ "Joint"
))
filter_years$year <- as.factor(filter_years$year)
ggplot(filter_years, aes(x = year, fill = procedure_type_2)) +
geom_bar() +
labs(title = "Asylum Application Procedure Type | 2013-2022",
x = "Year",
y= NULL,
fill = "Procedure Type") +
theme_unhcr()+
theme(legend.position = "bottom")
options(scipen = 999)
library(tidyverse)
library(modeldata)
library(tidymodels)
asy_dec_model <- asylum_decisions %>%
filter(dec_recognized + dec_other + dec_rejected + dec_closed == dec_total) %>%
mutate(acceptance_rate_pct = (dec_recognized + dec_other)/dec_total)
forest_mod <-
rand_forest(mtry = 3,
trees = 500,
min_n = 4) %>%
set_engine(engine = "randomForest") %>%
set_mode("regression")
forest_mod
set.seed(100) # Important!
asylum_split  <- initial_split(asy_dec)
asylum_train  <- training(asylum_split)
asylum_test   <- testing(asylum_split)
rf_reg_fit <- forest_mod %>%
fit(acceptance_rate_pct ~ coo_iso + coa_iso + procedure_type + dec_level + dec_pc,
data = asylum_train)
options(scipen = 999)
library(tidyverse)
library(modeldata)
library(tidymodels)
asy_dec_model <- asylum_decisions %>%
filter(dec_recognized + dec_other + dec_rejected + dec_closed == dec_total) %>%
mutate(acceptance_rate_pct = (dec_recognized + dec_other)/dec_total)
forest_mod <-
rand_forest(mtry = 3,
trees = 500,
min_n = 4) %>%
set_engine(engine = "randomForest") %>%
set_mode("regression")
forest_mod
set.seed(100) # Important!
asylum_split  <- initial_split(asy_dec)
asylum_train  <- training(asylum_split)
asylum_test   <- testing(asylum_split)
rf_reg_fit <- forest_mod %>%
fit(acceptance_rate_pct ~ coo_iso + coa_iso + procedure_type + dec_level + dec_pc,
data = asylum_train)
# Plot
ggplot() +
geom_sf(data = poly_refugees,
aes(fill = legend),
color = "transparent") +
geom_sf(data = line,
aes(linetype = type),
color = "white",
linewidth = .25,
show.legend = FALSE) +
coord_sf(crs = st_crs('ESRI:54030'),
expand = FALSE) +
scale_linetype_manual(values = c(1, 2, 3, 4)) +
scale_fill_unhcr_d(palette = "pal_blue") +
# labs(
#   title = "Global refugee displacement by country of asylum | 2021",
#   caption = "The boundaries and names shown and the designations used on this map do not imply official\nendorsement or acceptance by the United Nations.\nSource: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
# ) +
theme_unhcr(void = TRUE)
# ggplot() +
#   geom_sf(data = poly,
#           fill = unhcr_pal(n = 5, "pal_grey")[2],
#           color = "transparent") +
#   geom_sf(data = line,
#           aes(linetype = type),
#           color = "white",
#           linewidth = .25,
#           show.legend = FALSE) +
#   geom_sf(data = df_ref,
#           aes(size = total_refugees),
#           shape = 21,
#           fill = unhcr_pal(n = 1, "pal_blue"),
#           color = unhcr_pal(n = 5, "pal_blue")[5],
#           alpha = 0.3) +
#   scale_linetype_manual(values = c(1, 2, 3, 4)) +
#   scale_size_area(max_size = 12,
#                   labels = scales::label_number(
#                     scale_cut = cut_short_scale()
#                   ),
#                   breaks = c(1e5, 1e6, 5e6)) +
#   # labs(
#   #   title = "Global refugee displacement by country of origin | Last Decade",
#   #   caption = "The boundaries and names shown and the designations used on this map do not imply official endorsement or\nacceptance by the United Nations.\nSource: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
#   # ) +
#   coord_sf(crs = st_crs('ESRI:54030')) +
#   theme_unhcr(void = TRUE)
ref_coo_10 <- refugees::population |>
filter(year == 2022) |>
summarise(refugees = sum(refugees, na.rm = TRUE) + sum(oip, na.rm = TRUE),
.by = coo_name) |>
slice_max(order_by = refugees, n = 10) |>
ggplot(aes(refugees, reorder(coo_name, refugees))) +
geom_col(fill = unhcr_pal(n = 1, "pal_blue"),
width = 0.7) +
geom_text(aes(label = label_comma()(refugees)),
hjust = -0.2) +
scale_x_continuous(expand = expansion(mult = c(0, 0.4))) +
labs(title = "Refugees and other people in need of international protection",
subtitle = "By country of origin | end-2022",
caption = "Source: UNHCR Refugee Data Finder") +
theme_unhcr(font_size = 15,
grid = FALSE,
axis = FALSE,
axis_title = FALSE,
axis_text = "y")
ref_coo_10
# Plot
ggplot() +
geom_sf(data = poly_refugees,
aes(fill = legend),
color = "transparent") +
geom_sf(data = line,
aes(linetype = type),
color = "white",
linewidth = .25,
show.legend = FALSE) +
coord_sf(crs = st_crs('ESRI:54030'),
expand = FALSE) +
scale_linetype_manual(values = c(1, 2, 3, 4)) +
scale_fill_unhcr_d(palette = "pal_blue") +
# labs(
#   title = "Global refugee displacement by country of asylum | 2021",
#   caption = "The boundaries and names shown and the designations used on this map do not imply official\nendorsement or acceptance by the United Nations.\nSource: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
# ) +
theme_unhcr(void = TRUE)
# ggplot() +
#   geom_sf(data = poly,
#           fill = unhcr_pal(n = 5, "pal_grey")[2],
#           color = "transparent") +
#   geom_sf(data = line,
#           aes(linetype = type),
#           color = "white",
#           linewidth = .25,
#           show.legend = FALSE) +
#   geom_sf(data = df_ref,
#           aes(size = total_refugees),
#           shape = 21,
#           fill = unhcr_pal(n = 1, "pal_blue"),
#           color = unhcr_pal(n = 5, "pal_blue")[5],
#           alpha = 0.3) +
#   scale_linetype_manual(values = c(1, 2, 3, 4)) +
#   scale_size_area(max_size = 12,
#                   labels = scales::label_number(
#                     scale_cut = cut_short_scale()
#                   ),
#                   breaks = c(1e5, 1e6, 5e6)) +
#   # labs(
#   #   title = "Global refugee displacement by country of origin | Last Decade",
#   #   caption = "The boundaries and names shown and the designations used on this map do not imply official endorsement or\nacceptance by the United Nations.\nSource: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
#   # ) +
#   coord_sf(crs = st_crs('ESRI:54030')) +
#   theme_unhcr(void = TRUE)
