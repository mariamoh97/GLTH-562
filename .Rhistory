# Sort line type
line <- read_sf(line_url) |>
mutate(
type = as_factor(type) |>
fct_relevel("solid", "dashed", "dotted", "dashed-dot")
) |>
st_set_crs(4326)
# # Data URL
# df_url <- read_csv("https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/bubble_map.csv")
#
# country_data <- refugees::population %>%
#                 filter(year >= 2012 & year <= 2022) %>%
#                 group_by(coo_name, coo_iso) %>%
#                 summarise(total_refugees = sum(refugees),
#                           total_asylum = sum(asylum_seekers),
#                           total_idps = sum(idps)) %>%
#                 ungroup()
# # country_data
# loc_data <- country_data %>%
#             left_join(df_url, c("coo_iso" = "iso3")) %>%
#             select(-gis_name, -ref)
#
# top10_refugees <- loc_data %>%
#                   arrange(desc(total_refugees)) %>%
#                   drop_na(lon)
# # print(head(top10_refugees, 10))
#
# top10_asylum <- loc_data %>%
#                 arrange(desc(total_asylum)) %>%
#                 drop_na(lon)
# # print(head(top10_asylum, 10))
#
# top10_idps <- loc_data %>%
#               arrange(desc(total_idps)) %>%
#               drop_na(lon)
# # print(head(top10_idps, 10))
#
#
# poly_url <- "https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/world_polygons_simplified.json"
# line_url <- "https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/world_lines_simplified.json"
#
# # Read and transform data for refugees
# df_ref <- top10_refugees %>%
#   st_as_sf(coords = c("lon", "lat"),
#            crs = 4326)
#
# poly <- read_sf(poly_url) %>%
#   st_set_crs(4326)
#
# line <- read_sf(line_url) %>%
#   mutate(
#     type = as_factor(type) %>%
#       fct_relevel("solid", "dashed", "dotted", "dashed-dot")
#   ) %>%
#   st_set_crs(4326)
#
# # Read and transform data for asylum seekers
# df_asy <- top10_asylum %>%
#   st_as_sf(coords = c("lon", "lat"),
#            crs = 4326)
#
# # Read and transform data for internally displaced persons
# df_idp <- top10_idps %>%
#   st_as_sf(coords = c("lon", "lat"),
#            crs = 4326)
# Plot
ggplot() +
geom_sf(data = poly_refugees,
aes(fill = legend),
color = "transparent") +
geom_sf(data = line,
aes(linetype = type),
color = "white",
linewidth = .25,
show.legend = FALSE) +
coord_sf(crs = st_crs('ESRI:54030'),
expand = FALSE) +
scale_linetype_manual(values = c(1, 2, 3, 4)) +
scale_fill_unhcr_d(palette = "pal_blue") +
labs(
title = "Global refugee displacement by country of asylum | 2021",
caption = "The boundaries and names shown and the designations used on this map do not imply official\nendorsement or acceptance by the United Nations.\nSource: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
) +
theme_unhcr(void = TRUE)
# ggplot() +
#   geom_sf(data = poly,
#           fill = unhcr_pal(n = 5, "pal_grey")[2],
#           color = "transparent") +
#   geom_sf(data = line,
#           aes(linetype = type),
#           color = "white",
#           linewidth = .25,
#           show.legend = FALSE) +
#   geom_sf(data = df_ref,
#           aes(size = total_refugees),
#           shape = 21,
#           fill = unhcr_pal(n = 1, "pal_blue"),
#           color = unhcr_pal(n = 5, "pal_blue")[5],
#           alpha = 0.3) +
#   scale_linetype_manual(values = c(1, 2, 3, 4)) +
#   scale_size_area(max_size = 12,
#                   labels = scales::label_number(
#                     scale_cut = cut_short_scale()
#                   ),
#                   breaks = c(1e5, 1e6, 5e6)) +
#   # labs(
#   #   title = "Global refugee displacement by country of origin | Last Decade",
#   #   caption = "The boundaries and names shown and the designations used on this map do not imply official endorsement or\nacceptance by the United Nations.\nSource: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
#   # ) +
#   coord_sf(crs = st_crs('ESRI:54030')) +
#   theme_unhcr(void = TRUE)
### Asylum Seekers
# ggplot() +
#   geom_sf(data = poly,
#           fill = unhcr_pal(n = 5, "pal_grey")[2],
#           color = "transparent") +
#   geom_sf(data = line,
#           aes(linetype = type),
#           color = "white",
#           linewidth = .25,
#           show.legend = FALSE) +
#   geom_sf(data = df_asy,
#           aes(size = total_asylum),
#           shape = 21,
#           fill = unhcr_pal(n = 1, "pal_blue"),
#           color = unhcr_pal(n = 5, "pal_blue")[5],
#           alpha = 0.3) +
#   scale_linetype_manual(values = c(1, 2, 3, 4)) +
#   scale_size_area(max_size = 12,
#                   labels = scales::label_number(
#                     scale_cut = cut_short_scale()
#                   ),
#                   breaks = c(1e5, 1e6, 5e6)) +
#   # labs(
#   #   title = "Global refugee displacement by country of origin | Last Decade",
#   #   caption = "The boundaries and names shown and the designations used on this map do not imply official endorsement or\nacceptance by the United Nations.\nSource: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
#   # ) +
#   coord_sf(crs = st_crs('ESRI:54030')) +
#   theme_unhcr(void = TRUE)
# Plot
ggplot() +
geom_sf(data = poly_idps,
aes(fill = legend),
color = "transparent") +
geom_sf(data = line,
aes(linetype = type),
color = "white",
linewidth = .25,
show.legend = FALSE) +
coord_sf(crs = st_crs('ESRI:54030'),
expand = FALSE) +
scale_linetype_manual(values = c(1, 2, 3, 4)) +
scale_fill_unhcr_d(palette = "pal_blue") +
labs(
title = "Global refugee displacement by country of asylum | 2021",
caption = "The boundaries and names shown and the designations used on this map do not imply official\nendorsement or acceptance by the United Nations.\nSource: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
) +
theme_unhcr(void = TRUE)
#
# ggplot() +
#   geom_sf(data = poly,
#           fill = unhcr_pal(n = 5, "pal_grey")[2],
#           color = "transparent") +
#   geom_sf(data = line,
#           aes(linetype = type),
#           color = "white",
#           linewidth = .25,
#           show.legend = FALSE) +
#   geom_sf(data = df_idp,
#           aes(size = total_idps),
#           shape = 21,
#           fill = unhcr_pal(n = 1, "pal_blue"),
#           color = unhcr_pal(n = 5, "pal_blue")[5],
#           alpha = 0.3) +
#   scale_linetype_manual(values = c(1, 2, 3, 4)) +
#   scale_size_area(max_size = 12,
#                   labels = scales::label_number(
#                     scale_cut = cut_short_scale()
#                   ),
#                   breaks = c(1e5, 1e6, 5e6)) +
#   # labs(
#   #   title = "Global refugee displacement by country of origin | Last Decade",
#   #   caption = "The boundaries and names shown and the designations used on this map do not imply official endorsement or\nacceptance by the United Nations.\nSource: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
#   # ) +
#   coord_sf(crs = st_crs('ESRI:54030')) +
#   theme_unhcr(void = TRUE)
df <- read_csv("https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/correlation/heatmap.csv")
# Plot
ggplot(
df,
aes(
x = year,
y = fct_rev(location)
)
) +
geom_tile(aes(
fill = values
),
color = "white",
lwd = .5,
linetype = 1
) +
geom_text(
aes(
label = scales::number(values, accuracy = 0.1)
),
color = if_else(df$values > 2, "white", unhcr_pal(n = 5, "pal_grey")[5]),
size = 8 / .pt
) +
labs(
title = "Refugee population by region | 2011 - 2020",
subtitle = "Number of people in millions",
caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
) +
scale_x_continuous(
expand = expansion(c(0, 0)),
breaks = pretty_breaks(n = 10)
) +
scale_y_discrete(
labels = scales::label_wrap(17)
) +
scale_fill_stepsn(
colors = unhcr_pal(n = 5, "pal_blue"),
n.break = 5
) +
coord_fixed() +
theme_unhcr(
grid = FALSE,
axis = FALSE,
axis_title = FALSE,
legend = FALSE
)
## Where Do Displaced People Seek Asylum?
# # Data URL
# df_url <- read_csv("https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/bubble_map.csv")
#
# # print(refugees::flows %>% filter(year >= 2012 & year <=2022))
# app_country_data <- refugees::flows %>%
#                 filter(year >= 2012 & year <= 2022) %>%
#                 group_by(coa_name, coa_iso) %>%
#                 summarise(app_total_asylum = sum(asylum_seekers)) %>%
#                 ungroup()
#
# # print(app_country_data)
#
# # country_data
# app_loc_data <- app_country_data %>%
#             left_join(df_url, c("coa_iso" = "iso3")) %>%
#             select(-gis_name, -ref)
#
#
# app_top10_asylum <- app_loc_data %>%
#                 arrange(desc(app_total_asylum)) %>%
#                 drop_na(lon)
#
#
# poly_url <- "https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/world_polygons_simplified.json"
# line_url <- "https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/world_lines_simplified.json"
#
#
#
# app_poly <- read_sf(poly_url) %>%
#   st_set_crs(4326)
#
# app_line <- read_sf(line_url) %>%
#   mutate(
#     type = as_factor(type) %>%
#       fct_relevel("solid", "dashed", "dotted", "dashed-dot")
#   ) %>%
#   st_set_crs(4326)
#
# # Read and transform data for asylum seekers
# app_df_asy <- app_top10_asylum %>%
#   st_as_sf(coords = c("lon", "lat"),
#            crs = 4326)
#
# ggplot() +
#   geom_sf(data = app_poly,
#           fill = unhcr_pal(n = 5, "pal_grey")[2],
#           color = "transparent") +
#   geom_sf(data = app_line,
#           aes(linetype = type),
#           color = "white",
#           linewidth = .25,
#           show.legend = FALSE) +
#   geom_sf(data = app_df_asy,
#           aes(size = app_total_asylum),
#           shape = 21,
#           fill = unhcr_pal(n = 1, "pal_blue"),
#           color = unhcr_pal(n = 5, "pal_blue")[5],
#           alpha = 0.3) +
#   scale_linetype_manual(values = c(1, 2, 3, 4)) +
#   scale_size_area(max_size = 12,
#                   labels = scales::label_number(
#                     scale_cut = cut_short_scale()
#                   ),
#                   breaks = c(1e5, 1e6, 5e6)) +
#   # labs(
#   #   title = "Global refugee displacement by country of origin | Last Decade",
#   #   caption = "The boundaries and names shown and the designations used on this map do not imply official endorsement or\nacceptance by the United Nations.\nSource: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
#   # ) +
#   coord_sf(crs = st_crs('ESRI:54030')) +
#   theme_unhcr(void = TRUE)
#| context: setup
#| include: false
library(tidyverse)
library(refugees)
library(shiny)
library(ggplot2)
library(unhcrthemes)
library(scales)
library(tidymodels)
library(ggthemes)
library(unhcrthemes)
library(dplyr)
library(tidyr)
library(sf)
library(echarts4r)
library(ggiraph)
library(widgetframe)
library(plotly)
library(viridis)
library(DT)
library(gganimate)
library(plotly)
# ggplot() +
#   geom_sf(data = poly_refugees,
#           aes(fill = legend),
#           color = "transparent") +
#   geom_sf(data = line,
#           aes(linetype = type),
#           color = "white",
#           linewidth = .25,
#           show.legend = FALSE) +
#   coord_sf(crs = st_crs('ESRI:54030'),
#            expand = FALSE) +
#   scale_linetype_manual(values = c(1, 2, 3, 4)) +
#   scale_fill_unhcr_d(palette = "pal_blue") +
#   labs(
#     title = "Global refugee displacement by country of origin| 2012-2022")+
#   #   caption = "The boundaries and names shown and the designations used on this map do not imply official\nendorsement or acceptance by the United Nations.\nSource: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
#   # ) +
#   theme_unhcr(void = TRUE)
p <- ggplot() +
geom_sf(data = poly_refugees,
aes(fill = legend),
color = "transparent") +
geom_sf(data = line,
aes(linetype = type),
color = "white",
linewidth = .25,
show.legend = FALSE) +
coord_sf(crs = st_crs('ESRI:54030'),
expand = FALSE) +
scale_linetype_manual(values = c(1, 2, 3, 4)) +
scale_fill_unhcr_d(palette = "pal_blue") +
labs(
title = "Global refugee displacement by country of origin| 2012-2022"
) +
theme_void()
p <- ggplotly(p)
view(demographics)
view(poly_refugees)
knitr::opts_chunk$set(echo = TRUE)
filter_years <- asylum_decisions %>%
filter(year %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022")) %>% mutate(procedure_type_2 = case_when(
procedure_type %in% c("G") ~ "Government",
procedure_type %in% c("U") ~ "UNHCR",
TRUE ~ "Joint"
))
filter_years$year <- as.factor(filter_years$year)
ggplot(filter_years, aes(x = year, fill = procedure_type_2)) +
geom_bar() +
labs(title = "Procedure Types | 2013-2022",
x = "Year",
y= NULL,
fill = "Procedure Type") +
theme_unhcr()+
theme(legend.position = "bottom")
library(tidyverse)
library(refugees)
library(scales)
library(unhcrthemes)
library(lubridate)
library(dplyr)
library(ggrepel)
library(data.table)
library(tidyverse)
library(refugees)
library(shiny)
library(ggplot2)
library(unhcrthemes)
library(scales)
library(tidymodels)
library(ggthemes)
library(unhcrthemes)
library(dplyr)
library(tidyr)
library(sf)
library(echarts4r)
library(ggiraph)
library(widgetframe)
library(plotly)
library(viridis)
library(DT)
library(gganimate)
library(plotly)
p <- ggplot() +
geom_sf(data = poly_refugees,
aes(fill = legend, text = paste("Country: ", coo_name, "<br>Refugees: ", total_refugees)),
color = "transparent") +
geom_sf(data = line,
aes(),
linetype = "solid", # Setting linetype outside aes() with a fixed value
color = "white",
linewidth = .25) + # Removing show.legend = FALSE
coord_sf(crs = st_crs('ESRI:54030'),
expand = FALSE) +
scale_fill_unhcr_d(palette = "pal_blue") +
labs(
title = "Global refugee displacement by country of origin| 2012-2022"
) +
theme_void()
# Convert ggplot object to plotly
p <- ggplotly(p, tooltip = "text")
p
# Data Wrangling
setnames(countries, "iso_code", "coo_iso",  skip_absent=TRUE)
regional_data <- solutions %>%
filter(year %in% c("2011", "2012","2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020")) %>%
left_join(countries,join_by("coo_iso"))%>%
group_by(unhcr_region) %>%
filter(unhcr_region!="NA")
# Plotting
ggplot(
regional_data,
aes(
x = year,
y = fct_rev(unhcr_region)
)
) +
geom_tile(aes(
fill = resettlement
),
color = "white",
lwd = .5,
linetype = 1
) +
labs(
title = "Resettled population  by region | 2011 - 2020",
caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
) +
scale_x_continuous(
expand = expansion(c(0, 0)),
breaks = pretty_breaks(n = 10)
) +
scale_y_discrete(
labels = scales::label_wrap(17)
) +
scale_fill_stepsn(
colors = unhcr_pal(n = 5, "pal_blue"),
n.break = 5,
name = "Number of people"
) +
coord_fixed() +
theme_unhcr(
font_size = 13,
grid = FALSE,
axis = FALSE,
axis_title = FALSE,
legend_title = TRUE
)
filtered_data <- demographics %>%
select(coo_name, year, m_total, f_total, acc_type) %>%
mutate(children_female=f_0_4 + f_5_11 + f_12_17) %>%
mutate(children_male=m_0_4 + m_5_11 + m_12_17)
library(tidyverse)
library(refugees)
library(scales)
library(unhcrthemes)
library(lubridate)
library(dplyr)
library(ggrepel)
library(data.table)
filtered_data <- demographics %>%
select(coo_name, year, m_total, f_total, acc_type) %>%
mutate(children_female=f_0_4 + f_5_11 + f_12_17) %>%
mutate(children_male=m_0_4 + m_5_11 + m_12_17)
demographics %>%
mutate(children_female=f_0_4 + f_5_11 + f_12_17) %>%
mutate(children_male=m_0_4 + m_5_11 + m_12_17)
filter(year %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022"))%>%
# filter(coo_name %in% input$country) %>%
# mutate(year = factor(year)) %>%
filter(year %in% input$year) %>%
pivot_longer(cols = c("f_total", "m_total"),
names_to = "gender",
values_to = "total_applications") %>%
group_by(coo_name, gender,year) %>%
summarise(total_applications = sum(total_applications, na.rm = TRUE))
demographics %>%
mutate(children_female=f_0_4 + f_5_11 + f_12_17) %>%
mutate(children_male=m_0_4 + m_5_11 + m_12_17)
filter(year %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022"))%>%
# filter(coo_name %in% input$country) %>%
# mutate(year = factor(year)) %>%
filter(year %in% input$year) %>%
pivot_longer(cols = c("f_total", "m_total"),
names_to = "gender",
values_to = "total_applications") %>%
group_by(coo_name, gender,year) %>%
summarise(total_applications = sum(total_applications, na.rm = TRUE))
