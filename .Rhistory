left_join(df_url, c("coa_iso" = "iso3")) %>%
select(-gis_name, -ref)
app_top10_refugees <- app_loc_data %>%
arrange(desc(app_total_refugees)) %>%
drop_na(lon)
# print(head(top10_refugees, 10))
app_top10_asylum <- app_loc_data %>%
arrange(desc(app_total_asylum)) %>%
drop_na(lon)
# print(head(top10_asylum, 10))
app_top10_oip <- app_loc_data %>%
arrange(desc(app_total_oip)) %>%
drop_na(lon)
# print(head(top10_idps, 10))
poly_url <- "https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/world_polygons_simplified.json"
line_url <- "https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/world_lines_simplified.json"
# Read and transform data for refugees
app_df_ref <- app_top10_refugees %>%
st_as_sf(coords = c("lon", "lat"),
crs = 4326)
app_poly <- read_sf(poly_url) %>%
st_set_crs(4326)
app_line <- read_sf(line_url) %>%
mutate(
type = as_factor(type) %>%
fct_relevel("solid", "dashed", "dotted", "dashed-dot")
) %>%
st_set_crs(4326)
# Read and transform data for asylum seekers
app_df_asy <- app_top10_asylum %>%
st_as_sf(coords = c("lon", "lat"),
crs = 4326)
# app_poly <- read_sf(poly_url) %>%
#   st_set_crs(4326)
#
# line <- read_sf(line_url) %>%
#   mutate(
#     type = as_factor(type) %>%
#       fct_relevel("solid", "dashed", "dotted", "dashed-dot")
#   ) %>%
#   st_set_crs(4326)
# Read and transform data for internally displaced persons
app_df_oip <- app_top10_oip %>%
st_as_sf(coords = c("lon", "lat"),
crs = 4326)
# poly <- read_sf(poly_url) %>%
#   st_set_crs(4326)
#
# line <- read_sf(line_url) %>%
#   mutate(
#     type = as_factor(type) %>%
#       fct_relevel("solid", "dashed", "dotted", "dashed-dot")
#   ) %>%
#   st_set_crs(4326)
# Data URL
df_url <- read_csv("https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/bubble_map.csv")
print(head(refugees::flows %>% filter(year >= 2012 & year <=2022)))
app_country_data <- refugees::flows %>%
filter(year >= 2012 & year <= 2022) %>%
group_by(coa_name, coa_iso) %>%
summarise(app_total_refugees = sum(refugees),
app_total_asylum = sum(asylum_seekers),
app_total_oip = sum(oip)) %>%
ungroup()
print(app_country_data)
# country_data
app_loc_data <- app_country_data %>%
left_join(df_url, c("coa_iso" = "iso3")) %>%
select(-gis_name, -ref)
app_top10_refugees <- app_loc_data %>%
arrange(desc(app_total_refugees)) %>%
drop_na(lon)
# print(head(top10_refugees, 10))
app_top10_asylum <- app_loc_data %>%
arrange(desc(app_total_asylum)) %>%
drop_na(lon)
# print(head(top10_asylum, 10))
app_top10_oip <- app_loc_data %>%
arrange(desc(app_total_oip)) %>%
drop_na(lon)
# print(head(top10_idps, 10))
poly_url <- "https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/world_polygons_simplified.json"
line_url <- "https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/world_lines_simplified.json"
# Read and transform data for refugees
app_df_ref <- app_top10_refugees %>%
st_as_sf(coords = c("lon", "lat"),
crs = 4326)
app_poly <- read_sf(poly_url) %>%
st_set_crs(4326)
app_line <- read_sf(line_url) %>%
mutate(
type = as_factor(type) %>%
fct_relevel("solid", "dashed", "dotted", "dashed-dot")
) %>%
st_set_crs(4326)
# Read and transform data for asylum seekers
app_df_asy <- app_top10_asylum %>%
st_as_sf(coords = c("lon", "lat"),
crs = 4326)
# app_poly <- read_sf(poly_url) %>%
#   st_set_crs(4326)
#
# line <- read_sf(line_url) %>%
#   mutate(
#     type = as_factor(type) %>%
#       fct_relevel("solid", "dashed", "dotted", "dashed-dot")
#   ) %>%
#   st_set_crs(4326)
# Read and transform data for internally displaced persons
app_df_oip <- app_top10_oip %>%
st_as_sf(coords = c("lon", "lat"),
crs = 4326)
# poly <- read_sf(poly_url) %>%
#   st_set_crs(4326)
#
# line <- read_sf(line_url) %>%
#   mutate(
#     type = as_factor(type) %>%
#       fct_relevel("solid", "dashed", "dotted", "dashed-dot")
#   ) %>%
#   st_set_crs(4326)
# Data URL
df_url <- read_csv("https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/bubble_map.csv")
print(refugees::flows %>% filter(year >= 2012 & year <=2022))
app_country_data <- refugees::flows %>%
filter(year >= 2012 & year <= 2022) %>%
group_by(coa_name, coa_iso) %>%
summarise(app_total_refugees = sum(refugees),
app_total_asylum = sum(asylum_seekers),
app_total_oip = sum(oip)) %>%
ungroup()
print(app_country_data)
# country_data
app_loc_data <- app_country_data %>%
left_join(df_url, c("coa_iso" = "iso3")) %>%
select(-gis_name, -ref)
app_top10_refugees <- app_loc_data %>%
arrange(desc(app_total_refugees)) %>%
drop_na(lon)
# print(head(top10_refugees, 10))
app_top10_asylum <- app_loc_data %>%
arrange(desc(app_total_asylum)) %>%
drop_na(lon)
# print(head(top10_asylum, 10))
app_top10_oip <- app_loc_data %>%
arrange(desc(app_total_oip)) %>%
drop_na(lon)
# print(head(top10_idps, 10))
poly_url <- "https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/world_polygons_simplified.json"
line_url <- "https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/world_lines_simplified.json"
# Read and transform data for refugees
app_df_ref <- app_top10_refugees %>%
st_as_sf(coords = c("lon", "lat"),
crs = 4326)
app_poly <- read_sf(poly_url) %>%
st_set_crs(4326)
app_line <- read_sf(line_url) %>%
mutate(
type = as_factor(type) %>%
fct_relevel("solid", "dashed", "dotted", "dashed-dot")
) %>%
st_set_crs(4326)
# Read and transform data for asylum seekers
app_df_asy <- app_top10_asylum %>%
st_as_sf(coords = c("lon", "lat"),
crs = 4326)
# app_poly <- read_sf(poly_url) %>%
#   st_set_crs(4326)
#
# line <- read_sf(line_url) %>%
#   mutate(
#     type = as_factor(type) %>%
#       fct_relevel("solid", "dashed", "dotted", "dashed-dot")
#   ) %>%
#   st_set_crs(4326)
# Read and transform data for internally displaced persons
app_df_oip <- app_top10_oip %>%
st_as_sf(coords = c("lon", "lat"),
crs = 4326)
# poly <- read_sf(poly_url) %>%
#   st_set_crs(4326)
#
# line <- read_sf(line_url) %>%
#   mutate(
#     type = as_factor(type) %>%
#       fct_relevel("solid", "dashed", "dotted", "dashed-dot")
#   ) %>%
#   st_set_crs(4326)
# ggplot() +
#   geom_sf(data = app_poly,
#           fill = unhcr_pal(n = 5, "pal_grey")[2],
#           color = "transparent") +
#   geom_sf(data = app_line,
#           aes(linetype = type),
#           color = "white",
#           linewidth = .25,
#           show.legend = FALSE) +
#   geom_sf(data = app_df_ref,
#           aes(size = app_total_refugees),
#           shape = 21,
#           fill = unhcr_pal(n = 1, "pal_blue"),
#           color = unhcr_pal(n = 5, "pal_blue")[5],
#           alpha = 0.3) +
#   scale_linetype_manual(values = c(1, 2, 3, 4)) +
#   scale_size_area(max_size = 12,
#                   labels = scales::label_number(
#                     scale_cut = cut_short_scale()
#                   ),
#                   breaks = c(1e5, 1e6, 5e6)) +
#   # labs(
#   #   title = "Global refugee displacement by country of origin | Last Decade",
#   #   caption = "The boundaries and names shown and the designations used on this map do not imply official endorsement or\nacceptance by the United Nations.\nSource: UNHCR Refugee Data Finder\nÂ© UNHCR, The UN Refugee Agency"
#   # ) +
#   coord_sf(crs = st_crs('ESRI:54030')) +
#   theme_unhcr(void = TRUE)
library(tidymodels)
library(refugees)
library(ggplot2)
library(unhcrthemes)
library(dplyr)
library(tidyr)
library(scales)
library(tidyverse)
library(sf)
library(tidyverse)
view(asylum_decisions)
asy_dec <- asylum_decisions %>%
mutate(acceptance_rate(pct) = (dec_recognized + dec_other)/dec_total * 100)
asy_dec <- asylum_decisions %>%
mutate(acceptance_rate_pct = (dec_recognized + dec_other)/dec_total * 100)
asy_dec
asy_dec <- asylum_decisions %>%
mutate(acceptance_rate_pct = (dec_recognized + dec_other)/dec_total * 100) %>%
arrange(desc(acceptance_rate_pct))
asy_dec
asy_dec <- asylum_decisions %>%
filter(dec_recognized + dec_other + dec_rejected + dec_closed != dec_total)
# mutate(acceptance_rate_pct = (dec_recognized + dec_other)/dec_total * 100) %>%
# arrange(desc(acceptance_rate_pct))
asy_dec
asy_dec <- asylum_decisions %>%
filter(dec_recognized + dec_other + dec_rejected + dec_closed == dec_total)
# mutate(acceptance_rate_pct = (dec_recognized + dec_other)/dec_total * 100) %>%
# arrange(desc(acceptance_rate_pct))
asy_dec
asy_dec <- asylum_decisions %>%
filter(dec_recognized + dec_other + dec_rejected + dec_closed == dec_total) %>%
mutate(acceptance_rate_pct = (dec_recognized + dec_other)/dec_total * 100) %>%
arrange(desc(acceptance_rate_pct))
asy_dec
view(gapminder)
library(gapminder)
view(gapminder)
view(gapminder::country_codes)
view(gapminder_unfiltered)
asy_dec <- asylum_decisions %>%
filter(dec_recognized + dec_other + dec_rejected + dec_closed == dec_total) %>%
mutate(acceptance_rate_pct = (dec_recognized + dec_other)/dec_total * 100) %>%
arrange(desc(acceptance_rate_pct))
world <- map_data("world") %>%
filter(region != "Antarctica")
lat_long <- read_csv(here::here("data", "world_country_and_usa_states_latitude_and_longitude_values.csv"))
asy_dec_loc <- asy_dec %>%
left_join(lat_long, join_by("coa_name" = "country"))
asy_dec <- asylum_decisions %>%
filter(dec_recognized + dec_other + dec_rejected + dec_closed == dec_total) %>%
mutate(acceptance_rate_pct = (dec_recognized + dec_other)/dec_total * 100) %>%
arrange(desc(acceptance_rate_pct))
world <- map_data("world") %>%
filter(region != "Antarctica")
lat_long <- read_csv(here::here("data", "world_country_and_usa_states_latitude_and_longitude_values.csv"))
asy_dec_loc <- asy_dec %>%
left_join(lat_long, join_by("coa_name" == "country"))
sliding_map <- world %>%
ggplot() +
geom_polygon(aes( x= long, y = lat, group = group),
fill = "grey20",
color = "white",
size = 0.01) +
geom_point(data= asy_dec_loc,
aes(x = long,
y = lat,
frame = year,
size = acceptance_rate_pct),
color = "orange",
alpha = 0.7) +
labs( title = "Asylum Application Acceptance Rate \n from 2000 to 2023}",
caption = "UNHCR") +
theme_map() +
scale_size_continuous(guide = F) +
scale_color_discrete(name = "Type") +
theme(plot.title = element_text(size = 10, hjust = 0.5))
library(tidymodels)
library(refugees)
library(ggplot2)
library(maps)
library(unhcrthemes)
library(dplyr)
library(tidyr)
library(scales)
library(tidyverse)
library(sf)
asy_dec <- asylum_decisions %>%
filter(dec_recognized + dec_other + dec_rejected + dec_closed == dec_total) %>%
mutate(acceptance_rate_pct = (dec_recognized + dec_other)/dec_total * 100) %>%
arrange(desc(acceptance_rate_pct))
world <- map_data("world") %>%
filter(region != "Antarctica")
lat_long <- read_csv(here::here("data", "world_country_and_usa_states_latitude_and_longitude_values.csv"))
asy_dec_loc <- asy_dec %>%
left_join(lat_long, join_by("coa_name" == "country"))
sliding_map <- world %>%
ggplot() +
geom_polygon(aes( x= long, y = lat, group = group),
fill = "grey20",
color = "white",
size = 0.01) +
geom_point(data= asy_dec_loc,
aes(x = long,
y = lat,
frame = year,
size = acceptance_rate_pct),
color = "orange",
alpha = 0.7) +
labs( title = "Asylum Application Acceptance Rate \n from 2000 to 2023}",
caption = "UNHCR") +
theme_map() +
scale_size_continuous(guide = F) +
scale_color_discrete(name = "Type") +
theme(plot.title = element_text(size = 10, hjust = 0.5))
asy_dec <- asylum_decisions %>%
filter(dec_recognized + dec_other + dec_rejected + dec_closed == dec_total) %>%
mutate(acceptance_rate_pct = (dec_recognized + dec_other)/dec_total * 100) %>%
arrange(desc(acceptance_rate_pct))
world <- map_data("world") %>%
filter(region != "Antarctica")
lat_long <- read_csv(here::here("data", "world_country_and_usa_states_latitude_and_longitude_values.csv"))
asy_dec_loc <- asy_dec %>%
left_join(lat_long, join_by("coa_name" == "country"))
sliding_map <- world %>%
ggplot() +
geom_polygon(aes( x= long, y = lat, group = group),
fill = "grey20",
color = "white",
size = 0.01) +
geom_point(data= asy_dec_loc,
aes(x = long,
y = lat,
frame = year,
size = acceptance_rate_pct),
color = "orange",
alpha = 0.7) +
labs( title = "Asylum Application Acceptance Rate \n from 2000 to 2023}",
caption = "UNHCR") +
theme_unhcr(void=TRUE) +
scale_size_continuous(guide = F) +
scale_color_discrete(name = "Type") +
theme(plot.title = element_text(size = 10, hjust = 0.5))
asy_dec <- asylum_decisions %>%
filter(dec_recognized + dec_other + dec_rejected + dec_closed == dec_total) %>%
mutate(acceptance_rate_pct = (dec_recognized + dec_other)/dec_total * 100) %>%
arrange(desc(acceptance_rate_pct))
world <- map_data("world") %>%
filter(region != "Antarctica")
lat_long <- read_csv(here::here("data", "world_country_and_usa_states_latitude_and_longitude_values.csv"))
asy_dec_loc <- asy_dec %>%
left_join(lat_long, join_by("coa_name" == "country"))
sliding_map <- world %>%
ggplot() +
geom_polygon(aes( x= long, y = lat, group = group),
fill = "grey20",
color = "white",
size = 0.01) +
geom_point(data= asy_dec_loc,
aes(x = long,
y = lat,
frame = year,
size = acceptance_rate_pct),
color = "orange",
alpha = 0.7) +
labs( title = "Asylum Application Acceptance Rate \n from 2000 to 2023}",
caption = "UNHCR") +
theme_map() +
scale_size_continuous(guide = F) +
scale_color_discrete(name = "Type") +
theme(plot.title = element_text(size = 10, hjust = 0.5))
library(tidymodels)
library(refugees)
library(ggplot2)
library(ggthemes)
install.packages(ggthemes)
install.packages("ggthemes")
library(tidymodels)
library(refugees)
library(ggplot2)
library(ggthemes)
library(unhcrthemes)
library(dplyr)
library(tidyr)
library(scales)
library(tidyverse)
library(sf)
asy_dec <- asylum_decisions %>%
filter(dec_recognized + dec_other + dec_rejected + dec_closed == dec_total) %>%
mutate(acceptance_rate_pct = (dec_recognized + dec_other)/dec_total * 100) %>%
arrange(desc(acceptance_rate_pct))
world <- map_data("world") %>%
filter(region != "Antarctica")
lat_long <- read_csv(here::here("data", "world_country_and_usa_states_latitude_and_longitude_values.csv"))
asy_dec_loc <- asy_dec %>%
left_join(lat_long, join_by("coa_name" == "country"))
sliding_map <- world %>%
ggplot() +
geom_polygon(aes( x= long, y = lat, group = group),
fill = "grey20",
color = "white",
size = 0.01) +
geom_point(data= asy_dec_loc,
aes(x = long,
y = lat,
frame = year,
size = acceptance_rate_pct),
color = "orange",
alpha = 0.7) +
labs( title = "Asylum Application Acceptance Rate \n from 2000 to 2023}",
caption = "UNHCR") +
theme_map() +
scale_size_continuous(guide = F) +
scale_color_discrete(name = "Type") +
theme(plot.title = element_text(size = 10, hjust = 0.5))
fig_2 <- ggplotly(sliding_map) %>% animation_slider(currentvalue = list(prefix = "Year ", font = list(color="orange")))
library(tidymodels)
library(refugees)
library(ggplot2)
library(ggthemes)
library(unhcrthemes)
library(dplyr)
library(tidyr)
library(scales)
library(tidyverse)
library(sf)
library(gganimate)
asy_dec <- asylum_decisions %>%
filter(dec_recognized + dec_other + dec_rejected + dec_closed == dec_total) %>%
mutate(acceptance_rate_pct = (dec_recognized + dec_other)/dec_total * 100) %>%
arrange(desc(acceptance_rate_pct))
world <- map_data("world") %>%
filter(region != "Antarctica")
lat_long <- read_csv(here::here("data", "world_country_and_usa_states_latitude_and_longitude_values.csv"))
asy_dec_loc <- asy_dec %>%
left_join(lat_long, join_by("coa_name" == "country"))
sliding_map <- world %>%
ggplot() +
geom_polygon(aes( x= long, y = lat, group = group),
fill = "grey20",
color = "white",
size = 0.01) +
geom_point(data= asy_dec_loc,
aes(x = long,
y = lat,
frame = year,
size = acceptance_rate_pct),
color = "orange",
alpha = 0.7) +
labs( title = "Asylum Application Acceptance Rate \n from 2000 to 2023}",
caption = "UNHCR") +
theme_map() +
scale_size_continuous(guide = F) +
scale_color_discrete(name = "Type") +
theme(plot.title = element_text(size = 10, hjust = 0.5))
fig_2 <- ggplotly(sliding_map) %>% animation_slider(currentvalue = list(prefix = "Year ", font = list(color="orange")))
library(tidymodels)
library(refugees)
library(ggplot2)
library(ggthemes)
library(unhcrthemes)
library(dplyr)
library(tidyr)
library(scales)
library(tidyverse)
library(sf)
library(echarts4r)
install.packages("echarts4r")
library(tidymodels)
library(refugees)
library(ggplot2)
library(ggthemes)
library(unhcrthemes)
library(dplyr)
library(tidyr)
library(scales)
library(tidyverse)
library(sf)
library(echarts4r)
library(ggiraph)
install.packages("ggiraph")
install.packages("ggiraph")
install.packages("ggiraph")
install.packages("ggiraph")
library(tidymodels)
library(refugees)
library(ggplot2)
library(ggthemes)
library(unhcrthemes)
library(dplyr)
library(tidyr)
library(scales)
library(tidyverse)
library(sf)
library(echarts4r)
library(ggiraph)
install.packages("ggiraph")
