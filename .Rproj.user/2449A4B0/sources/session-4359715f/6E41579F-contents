---
title: "Forced Out of Our Homelands"
title-slide-attributes:
    data-background-image: /Refugee-Migration-Factsheet.jpg
    data-background-size: contain
    data-background-opacity: "0.4"
subtitle: "Exploring UNHCR Data on Forced Displacement to Predict Asylum Acceptance Rates"
author: "Maria Mohyuddin and Aarushi Tripathi"
format:
  revealjs: 
    slide-number: true
    chalkboard: 
      buttons: false
    preview-links: auto
    css: styles.css
editor: visual
---

```{r}
library(tidymodels)
library(refugees)
library(ggplot2)
library(ggthemes)
library(unhcrthemes)
library(dplyr)
library(tidyr)
library(scales)
library(tidyverse)
library(sf)
library(echarts4r)
# library(ggiraph)
library(widgetframe)
library(plotly)
library(viridis)
library(DT)
library(gganimate)
```

# Exploring the Data {background-color="#0072BC" background-size="contain" background-opacity="0.3"}

## 2022 has been one of the worst years {background-color="#FFBCC1"}

::: incremental
-   In 2022, millions were forcibly displaced by persecution, conflict, violence, human rights violations and events seriously disturbing public order

-   The numbers grew by 21% by the end of the year

-   More than 1 in 74 people worldwide remained forcibly displaced as a result

-   Almost 90 per cent of them in low- and middle-income countries
:::

## Top 10 Countries of Origin for Refugees {background-color="#FFBCC1"}

```{r}

ref_coo_10 <- refugees::population %>%
  filter(year == 2022) %>%
  summarise(refugees = sum(refugees, na.rm = TRUE) + sum(oip, na.rm = TRUE),
            .by = coo_name) %>%
  slice_max(order_by = refugees, n = 10) %>%
  ggplot(aes(refugees, reorder(coo_name, refugees))) +
  geom_col(fill = unhcr_pal(n = 1, "pal_blue"),
           width = 0.7) +
  geom_text(aes(label = label_comma()(refugees)),
            hjust = -0.2) +
  scale_x_continuous(expand = expansion(mult = c(0, 0.4))) +
  labs(title = "Refugees and other people in need of international protection",
       subtitle = "By country of origin | end-2022",
       caption = "Source: UNHCR Refugee Data Finder") +
  theme_unhcr(font_size = 15,
              grid = FALSE,
              axis = FALSE,
              axis_title = FALSE,
              axis_text = "y")


ref_coo_10
                                        

```

## Important Definitions {.smaller background-color="#FFBCC1"}

::: columns
::: {.column width="20%"}
**Refugees** include individuals granted complementary forms of protection, and those enjoying temporary protection.
:::

::: {.column width="20%"}
**Asylum-seekers** are individuals who have sought international protection and whose claims for refugee status have not yet been determined.
:::

::: {.column width="30%"}
**Other people in need of international protection** refers to people who are outside their country or territory of origin, typically because they have been forcibly displaced across international borders, who have not been reported under other categories but who likely need international protection.
:::

::: {.column width="30%"}
**Internally displaced persons** are persons who have been forced to flee their homes , in particular as a result of, or in order to avoid the effects of armed conflict, situations of generalized violence, violations of human rights or natural or human-made disasters, and who have not crossed an internationally recognized State border.
:::
:::

## In the last decade, 62.2 million refugees were added {background-color="#FFBCC1"}

```{r}
# Global forcibly displaced population during last ten years


fd_last_ten_years <- refugees::population %>%
  filter(year >= 2012 & year <= 2022) %>%
  summarise(refugees = sum(refugees, na.rm = TRUE),
            asylum_seekers = sum(asylum_seekers, na.rm = TRUE), 
            oip = sum(oip, na.rm = TRUE), .by = year) %>%
  left_join(refugees::idmc %>%
              filter(year >= 2012 & year <= 2022) %>%
              summarise(idmc = sum(total, na.rm = TRUE), .by = year), by=c("year")) %>%
  left_join(refugees::unrwa %>%
              filter(year >= 2012 & year <= 2022) %>%
              summarise(unrwa = sum(total, na.rm = TRUE), .by = year), by=c("year")) %>%
  pivot_longer(cols = -year, names_to = "population_type", values_to = "total") %>% 
  mutate(population_type=factor(population_type, levels=c("oip", "unrwa","asylum_seekers", "refugees","idmc")), 
             population_type=recode(population_type,
             refugees="Refugees under UNHCR’s mandate",
             asylum_seekers="Asylum-seekers",
             oip="Other people in need of international protection",
             idmc="Internally displaced persons",
             unrwa="Palestine refugees under UNRWA’s mandate")) %>%
  arrange(year, population_type) %>%
  ggplot() +
  geom_area(aes(x = year, y = total, fill = population_type)) +
  # geom_text(aes(x = 2022, y = cumsum(total)-150000, label = population_type), check_overlap = TRUE) +
  scale_fill_unhcr_d(palette = "pal_unhcr") +
  labs(y = "Number of people", caption = "Source: UNHCR Refugee Data Finder") +
  scale_x_continuous(breaks = pretty_breaks(n = 10)) +
  scale_y_continuous(expand = expansion(c(0, 0.1)), breaks= pretty_breaks(n = 5), labels = label_number(scale_cut = cut_long_scale())) +  
  theme_unhcr(font_size = 15,
    grid = "Y",
    axis = "x",
    axis_title = "y") +
    scale_fill_manual(values = c("#EF4A60", "#8EBEFF", "#18375F","#0072BC", "#00B398")) +
guides(fill = guide_legend(nrow = 3, byrow = TRUE, reverse = TRUE)) 
  

# final_last_ten_years <- ggplotly(fd_last_ten_years, tooltip="fill")
fd_last_ten_years
# final_last_ten_years
                                        
                                        
```

## Which Nations Do Displaced People Belong To? {.smaller background-color="#FFBCC1"}

```{r}

# Load data

country_data <- refugees::population %>%
                filter(year >= 2012 & year <= 2022) %>%
                group_by(coo_name, coo_iso) %>%
                summarise(total_refugees = sum(refugees),
                          total_asylum = sum(asylum_seekers),
                          total_idps = sum(idps)) %>%
                ungroup()

# country_data
poly_url <- "https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/world_polygons_simplified.json"
line_url <- "https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/geospatial/world_lines_simplified.json"

# Add CRS to poly and join values from csv
poly_refugees <- read_sf(poly_url) %>% 
  st_set_crs(4326) %>% 
  left_join(country_data, by = c("color_code" = "coo_iso")) %>% 
  mutate(legend = case_when(
    total_refugees < 1e4 ~ "<10k",
    total_refugees < 1e5 ~ "10k-100k",
    total_refugees < 1e6 ~ "100k-1M",
    is.na(total_refugees) ~ NA_character_,
    TRUE ~ ">1M"
  )) %>% 
  mutate(legend = as_factor(legend) %>% 
           fct_relevel("<10k", "10k-100k", "100k-1M", ">1M"))

poly_idps <- read_sf(poly_url) %>% 
  st_set_crs(4326) %>% 
  left_join(country_data, by = c("color_code" = "coo_iso")) %>% 
  mutate(legend = case_when(
    total_idps < 1e4 ~ "<10k",
    total_idps < 1e5 ~ "10k-100k",
    total_idps < 1e6 ~ "100k-1M",
    is.na(total_idps) ~ NA_character_,
    TRUE ~ ">1M"
  )) %>% 
  mutate(legend = as_factor(legend) %>% 
           fct_relevel("<10k", "10k-100k", "100k-1M", ">1M"))
  

# Sort line type
line <- read_sf(line_url) %>%
  mutate(
    type = as_factor(type) %>%
      fct_relevel("solid", "dashed", "dotted", "dashed-dot")
  ) %>% 
  st_set_crs(4326)


```

::: panel-tabset
### Refugees

```{r}

# Plot
ggplot() +
  geom_sf(data = poly_refugees,
          aes(fill = legend),
          color = "transparent") +
  geom_sf(data = line,
          aes(linetype = type),
          color = "white",
          linewidth = .25,
          show.legend = FALSE) +
  coord_sf(crs = st_crs('ESRI:54030'),
           expand = FALSE) +
  scale_linetype_manual(values = c(1, 2, 3, 4)) +
  scale_fill_unhcr_d(palette = "pal_blue") +
  theme_unhcr(void = TRUE)

```

### Internally Displaced Persons

```{r}

# Plot
ggplot() +
  geom_sf(data = poly_idps,
          aes(fill = legend),
          color = "transparent") +
  geom_sf(data = line,
          aes(linetype = type),
          color = "white",
          linewidth = .25,
          show.legend = FALSE) +
  coord_sf(crs = st_crs('ESRI:54030'),
           expand = FALSE) +
  scale_linetype_manual(values = c(1, 2, 3, 4)) +
  scale_fill_unhcr_d(palette = "pal_blue") +
  theme_unhcr(void = TRUE)

```
:::

## Refugee Population Across UNHCR Regions {background-color="#FFBCC1"}

```{r}
df <- read_csv("https://raw.githubusercontent.com/GDS-ODSSS/unhcr-dataviz-platform/master/data/correlation/heatmap.csv")

# Plot
ggplot(
  df,
  aes(
    x = year,
    y = fct_rev(location)
  )
) +
  geom_tile(aes(
    fill = values
  ),
  color = "white",
  lwd = .5,
  linetype = 1
  ) +
  geom_text(
    aes(
      label = scales::number(values, accuracy = 0.1)
    ),
    color = if_else(df$values > 2, "white", unhcr_pal(n = 5, "pal_grey")[5]),
    size = 8 / .pt
  ) +
  labs(
    title = "Refugee population by region | 2011 - 2020",
    subtitle = "Number of people in millions",
    caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency"
  ) +
  scale_x_continuous(
    expand = expansion(c(0, 0)),
    breaks = pretty_breaks(n = 10)
  ) +
  scale_y_discrete(
    labels = scales::label_wrap(17)
  ) +
  scale_fill_stepsn(
    colors = unhcr_pal(n = 5, "pal_blue"),
    n.break = 5
  ) +
  coord_fixed() +
  theme_unhcr(
    grid = FALSE,
    axis = FALSE,
    axis_title = FALSE,
    legend = FALSE
  )

```

# Applications {background-color="#0072BC" background-opacity="0.3"}

## Which Countries Accept Most Asylum Applications {background-color="#FFBCC1"}

```{r}
asy_dec <- asylum_decisions %>%
            filter(dec_recognized + dec_other + dec_rejected + dec_closed == dec_total) %>%
            mutate(acceptance_rate_pct = (dec_recognized + dec_other)/dec_total * 100) %>%
            arrange(desc(acceptance_rate_pct))

world <- map_data("world") %>%
  filter(region != "Antarctica")

lat_long <- read_csv(here::here("data", "world_country_and_usa_states_latitude_and_longitude_values.csv"))

asy_dec_loc <- asy_dec %>%
                left_join(lat_long, join_by("coa_name" == "country"))


sliding_map <- world %>%
  ggplot() +
  geom_polygon(aes(x = long, y = lat, group = group),
               fill = unhcr_pal(n = 5, "pal_grey")[2],
               color = "transparent",
               size = 0.01) +
  geom_point(data= asy_dec_loc, 
             aes(text = coa_name,
                 x = longitude, 
                 y = latitude, 
                 frame = year,
                 size = acceptance_rate_pct/2),
             color = unhcr_pal(n = 5, "pal_blue")[5],
             alpha = 0.2) +
  labs( title = "Asylum Application Acceptance Rate \n from 2000 to 2023",
        caption = "UNHCR") +
  theme_map() +
  scale_size_continuous(guide = F) +
  scale_color_discrete(name = "Type") +
  theme(plot.title = element_text(size = 14, hjust = 0.5, family = "Lato"))



app_map <- ggplotly(sliding_map) %>% animation_slider(currentvalue = list(prefix = "Year ", font = list(color="#8395B9")))

app_map

```

## Most Common Types of Applications {background-color="#FFBCC1"}

```{r}

filter_years <- asylum_decisions %>% 
filter(year %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022")) %>% mutate(procedure_type_2 = case_when(
  procedure_type %in% c("G") ~ "Government",
  procedure_type %in% c("U") ~ "UNHCR",
  TRUE ~ "Joint"
))

filter_years$year <- as.factor(filter_years$year)

ggplot(filter_years, aes(x = year, fill = procedure_type_2)) +
  geom_bar() +
  labs(title = "Asylum Application Procedure Type | 2013-2022",
       x = "Year",
       y= NULL,
       fill = "Procedure Type") +
 theme_unhcr()+
  theme(legend.position = "bottom")

```

# Predicting Acceptance Rates {background-color="#0072BC" background-opacity="0.3"}

## Model Used and Design- Dependent and Independent Vars {background-color="#FFBCC1"}

::: panel-tabset
### Random Forest Model

-   Dependent Variable: Acceptance Rate
-   Independent Variables: ISO Codes for Countries of Origin and Asylum, Procedure Type, Decision Level, Applicant Type
-   Random forest because of categorical input

### RMSE Value

-   0.283
-   Improved RMSE value since last run
-   Ideal parameters based on tuning- 3 predictors (mtry) and 28 data points in a node (min_n)
:::

# THANK YOU! {background-color="#0072BC" background-opacity="0.3"}
